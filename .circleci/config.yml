# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  test:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.4-node-browsers

    steps:
      - checkout
      - run:
          name: Install Node
          command: |
            curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
            sudo apt-get install -y nodejs
      - run:
          name: Install PHP Extensions
          command: |
            sudo apt-get update -y
            sudo apt-get install -y libgmp-dev re2c libmhash-dev libmcrypt-dev file
            sudo n -s /usr/include/x86_64-linux-gnu/gmp.h /usr/local/include/
            sudo docker-php-ext-configure gmp
            sudo docker-php-ext-install gmp

      # Download and cache dependencies

      # composer cache
      - restore_cache:
          keys:
          # "composer.json" can be used if "composer.json"
          # is not committed to the repository.
          - composer-v1-{{ checksum "composer.lock" }}
          # fallback to using the latest cache if no exact match is found
          - composer-v1-
      - run: composer install -n --prefer-dist
      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor

      # node cache
      - restore_cache:
          keys:
            - node-v4-{{ checksum "package.json" }}
            - node-v4-
      - run: npm install
      - save_cache:
          key: node-v4-{{ checksum "package.json" }}
          paths:
            - node_modules
            - ~/.yarn

      # prepare the database
      - run: touch storage/testing.sqlite

      # Setup Application testing environment variables for CircleCI test
      - run: cp .env.example .env
      - run: php artisan key:generate

      # run tests with phpunit
      - run: composer test
      # this example uses codecept but you're not limited to it
      - store_test_results:
          path: tests/_output
      - store_artifacts:
          path: tests/_output

workflows:
  version: 2
  workflow:
    jobs:
    - test
